window.repositoryObject = {"parameters_custom_fields":[],"object_id":"p304","name":"usp_MatchLinkToDATEquipmentPosting","subtype":"PROCEDURE","is_user_defined":false,"description":null,"summary":[{"field":"Documentation","value":{"_type":"link","name":"LoadMatching@UDVLPLL4DATASRV.linklogi.com","id":"d9"}},{"field":"Schema","value":"dbo"},{"field":"Name","value":"usp_MatchLinkToDATEquipmentPosting"},{"field":"Type","value":"Procedure"}],"script":"CREATE PROCEDURE [dbo].[usp_MatchLinkToDATEquipmentPosting] \r\n  @EquipToken   int\r\n ,@CustCd       varchar(10) = ''\r\n ,@UserID       int         = 0\r\n  \r\n ,@SrceID       int         = 0\r\n ,@SrceSt       char(2)     = ''\r\n ,@SrceLong     float       = ''\r\n ,@SrceLat      float       = ''\r\n ,@SrceCountry  int         = 0\r\n ,@SrceRadius   int         = 0\r\n\r\n ,@DestID       int         = 0\r\n ,@DestSt       char(2)     = ''\r\n ,@DestLong     float       = ''\r\n ,@DestLat      float       = ''\r\n ,@DestCountry  int         = 0\r\n ,@DestRadius   int         = 0\r\n\r\n ,@DateAvail    datetime    = NULL\r\n ,@VSize        int         = 0\r\n ,@VType        INT      = 0\r\n ,@PAttrib      INT      = 0\r\n\r\n ,@PostMode     char(1)     = 'A' \r\n ,@GlobalExclude bit        = 0\r\n ,@NetworkId    int         = 0 \r\n ,@Corridor     char(1)     = 'R' \r\nAS\r\nBEGIN\r\n\r\n--------------------------------------------------------------------------\r\n--PROCEDURE NAME : usp_MatchLinkToDATEquipmentPosting\r\n--------------------------------------------------------------------------\r\n-- DESCRIPTION    : Perform Equipment Matching against DAT Load Posting\r\n--\r\n-- CALLED BY      : LoadMatching Web API \r\n-- EXECUTION FREQUENCY : \r\n-- \r\n-- INPUT PARAMS   : @EquipToken   = Newly created Equipment Posting's Token\r\n--                  @CustCD       = Customer Code        \r\n--                  @DateAvail    = Availab\r\n--                  \r\n--                  @SrceID       = Source Point ID from Point table        \r\n--                  @SrceCity     = Source City\r\n--                  @SrceSt       = Source State      \r\n--                  @SrceLong     = Source Longitude      \r\n--                  @SrceLat      = Source Latitude       \r\n--                  @SrceRadius   = Source Radius    \r\n--                  \r\n--                  @DestID       = Destination City      \r\n--                  @DestCity     = Destination State          \r\n--                  @DestSt       = Destination Longitude      \r\n--                  @DestLong     = Destination Longitude       \r\n--                  @DestLat      = Destination Latitude       \r\n--                  @DestRadius   = Destination Radius\r\n--                  \r\n--                  @VSize        = Vehicle Size in numeric form      \r\n--                  @VType        = Vehilce Type in numeric form  \r\n--                  @Comment      = Commment\r\n--                  @PostMode     = A(default): Visible to all, P: Private Network\r\n--                  @ClientRefNum = Client internal Reference Number \r\n--                  @ProductName  = Caller's Product Name\r\n--                  @PAttrib      = Posting Attribute in numeric form\r\n--                  @CreatedBy    = UserId of caller\r\n--                  @NetworkId    = When @PostMode is P then NetworkID otherwise 0\r\n--                  @Corridor     = R(default): Radius, C:Corridor mode\r\n--                 \r\n-- OUTPUT PARAMS  :\r\n-- STATUS RETURN  : \r\n--------------------------------------------------------------------------\r\n-- HISTORY : \r\n-- AUTHOR    DATE       DESCRIPTION\r\n-- Hiro      2018.09.04 Initial Development\r\n-- Hiro      2018.10.25 Use the GETDATE() instead of GETUTCDATE() to check if Available Date is valid(Not past), LLSIM-1726\r\n--------------------------------------------------------------------------\r\n--SET NOCOUNT ON\r\n\r\nDECLARE @fCosSrceLat     float\r\nDECLARE @fSinSrceLat     float\r\nDECLARE @fCosDestLat     float\r\nDECLARE @fSinDestLat     float\r\nDECLARE @fPo2            float\r\n\r\nDECLARE @GetDate         datetime = GETUTCDATE() -- End Date need to be compared with UTC Time\r\nDECLARE\t@Today           datetime = convert(varchar(10), GETDATE(), 101)\r\n\r\nDECLARE\t@SecondaryMatch\tchar(1) = 'S'\r\nDECLARE\t@PrimaryMatch\tchar(1) = 'P'\r\n\r\nDECLARE @AllVSize       int = 15 -- Full Truckload, 3/4 Truckload, Half Truckload, 1/4 Truckload\r\n-----------------------------------------------------------------------------------------------\r\n-- Setup constant values for range calculations -- revised 10/27/99 JAM\r\n-----------------------------------------------------------------------------------------------\r\nSET @fPo2        = 90.0  --DEGREES(pi()/2)\r\n\r\nSET @fCosSrceLat = cos(radians(@fPo2-@SrceLat))\r\nSET @fSinSrceLat = sin(radians(@fPo2-@SrceLat))\r\nSET @fCosDestLat = cos(radians(@fPo2-@DestLat))\r\nSET @fSinDestLat = sin(radians(@fPo2-@DestLat))\r\n\r\n\r\n\r\n-----------------------------------------------------------------------------------------------\r\n-- If EquipToken is not 0 then retrieve the posting information from database\r\n-----------------------------------------------------------------------------------------------\r\nIF (@EquipToken <> 0)\r\nBEGIN\r\n    SELECT\r\n      @CustCd       = CustCd\r\n     ,@UserID       = CreatedBy     \r\n                                \r\n     ,@SrceID       = SrceID     \r\n     ,@SrceSt       = SrceSt     \r\n     ,@SrceLong     = SrceLong   \r\n     ,@SrceLat      = SrceLat    \r\n     ,@SrceCountry  = SrceCountry\r\n     ,@SrceRadius   = SrceRadius \r\n                                \r\n     ,@DestID       = DestID     \r\n     ,@DestSt       = DestSt     \r\n     ,@DestLong     = DestLong   \r\n     ,@DestLat      = DestLat    \r\n     ,@DestCountry  = DestCountry\r\n     ,@DestRadius   = DestRadius \r\n                                \r\n     ,@DateAvail    = DateAvail  \r\n     ,@VSize        = VSize      \r\n     ,@VType        = VType      \r\n     ,@PAttrib      = PAttrib      \r\n                                \r\n     ,@PostMode     = PostMode   \r\n     ,@NetworkId    = NetworkId   \r\n     ,@Corridor     = Corridor   \r\n\r\n    FROM dbo.EquipmentPosting\r\n    WHERE Token = @EquipToken\r\nEND \r\n\r\n-----------------------------------------------------------------------------------------------\r\n-- If equip and load are at the same point, and not at zero longitude, \r\n-- THEN nudge the destination just a little so the math doesn't blow up (divide by zero).\r\n-----------------------------------------------------------------------------------------------\r\nIF ( (@SrceLong = @DestLong) AND \r\n     (@SrceLat  = @DestLat ) AND \r\n     (@SrceLong <> 0.0       )\r\n   )\r\n   BEGIN\r\n      SET @DestLong = @DestLong + 0.0001\r\n      SET @DestLat  = @DestLat  + 0.0001\r\n   END\r\n\r\n\r\n-----------------------------------------------------------------------------------------------\r\n-- PART 1 Insert Equipment matches for my posting\r\n-----------------------------------------------------------------------------------------------\r\n\r\n-----------------------------------------------------------------------------------------------\r\n--Corridor matching \r\n-----------------------------------------------------------------------------------------------\r\nIF (@Corridor  = 'C')\r\n   BEGIN\r\n    -----------------------------------------------------------------------------------------------\r\n    -- Calculate corridor corner points in Lat/Long\r\n    -----------------------------------------------------------------------------------------\r\n    DECLARE @fTheta float\r\n    DECLARE @fPhi   float\r\n    DECLARE @lAB    float\r\n    DECLARE @uABx   float\r\n    DECLARE @uABy   float\r\n    \r\n    DECLARE @Cx     float\r\n    DECLARE @Cy     float\r\n    DECLARE @Dx     float\r\n    DECLARE @Dy     float\r\n    DECLARE @Ex     float\r\n    DECLARE @Ey     float\r\n    DECLARE @Fx     float\r\n    DECLARE @Fy     float\r\n    DECLARE @Mx     float\r\n    DECLARE @My     float     \r\n    DECLARE @Nx     float\r\n    DECLARE @Ny     float\r\n    DECLARE @Ox     float\r\n    DECLARE @Oy     float\r\n    DECLARE @Px     float\r\n    DECLARE @Py     float\r\n     \r\n    -- Calculate the corridor parameters.  This assumes a flat earth approximation!! \r\n    SET @fTheta = degrees( @SrceRadius / 3959.0 )\r\n    SET @fPhi   = degrees( @DestRadius / 3959.0 )\r\n     \r\n    SET @lAB    = SQRT( (@DestLong - @SrceLong) * (@DestLong - @SrceLong) + \r\n                        (@DestLat  - @SrceLat ) * (@DestLat  - @SrceLat )\r\n                      )\r\n    SET @uABx   = (@DestLong - @SrceLong) / @lAB\r\n    SET @uABy   = (@DestLat  - @SrceLat ) / @lAB\r\n    \r\n    SET @Cx     = @fTheta * -@uABy\r\n    SET @Cy     = @fTheta *  @uABx\r\n    SET @Ex     = @fPhi   * -@uABy\r\n    SET @Ey     = @fPhi   *  @uABx\r\n    \r\n    -- Set the 4 points of the trapezoid (M,N,O,P) \r\n    SET @Px = @SrceLong - @Cx\r\n    SET @Py = @SrceLat  - @Cy\r\n    SET @Ox = @SrceLong + @Cx\r\n    SET @Oy = @SrceLat  + @Cy\r\n    SET @Mx = @DestLong - @Ex\r\n    SET @My = @DestLat  - @Ey\r\n    SET @Nx = @DestLong + @Ex\r\n    SET @Ny = @DestLat  + @Ey\r\n\r\n     \r\n    -----------------------------------------------------------------------------------------------\r\n    -- Load up local variables from processed records\r\n    -----------------------------------------------------------------------------------------------\r\n    INSERT INTO dbo.DATEquipmentLead\r\n\t (\r\n\t [CustCd] \r\n\t,[EToken] \r\n\t,[LToken]\r\n\t,[CreatedOn]\r\n\t,[CreatedBy]\r\n\t,[LeadType]\r\n\t)\r\n    SELECT @CustCd\r\n          ,@EquipToken\r\n          ,l.Token\r\n          ,@GetDate\r\n          ,@UserID\r\n          ,@PrimaryMatch\r\n      FROM dbo.DATLoadPosting l \r\n\r\n      -----------------------------------------------------------\r\n      -- Common lead filtering\r\n      -----------------------------------------------------------\r\n      WHERE  (l.EndDate > @GetDate) \r\n        -- Available date matches\r\n        AND ( \r\n               (l.DateAvail >= @Today) AND ( l.DateAvail >= @DateAvail )\r\n                    OR\r\n               (l.DateAvail < @Today) AND (@DateAvail = @Today)\t-- To handle Pre dated posting\r\n            ) \t\t\r\n\r\n        -- Vehicle size matches\r\n        AND ((@VSize & l.VSize & @AllVSize) > 0) \r\n    \r\n        -- Vechicle Type match\r\n        AND ((@VType & l.VType) > 0) \r\n\r\n        -- Country Border restriction conditions for equipment\r\n        AND (    \r\n                   l.SrceCountry = @SrceCountry   AND\r\n                   l.DestCountry = @DestCountry \r\n            ) -- .... END of country border closing tests\r\n\r\n       -- Used the Removed column instead of Removed table.\r\n       AND (l.DeletedOn IS NULL)\r\n\r\n       --Check if Equipment Posting is Private Network \r\n       AND (@PostMode = 'A' OR (EXISTS(SELECT 'X' FROM dbo.NetworkMembers \r\n                                                WHERE NetworkId = @NetworkId \r\n                                                AND MemberCustCD = l.CustCd)))\r\n\r\n       -- Start GEOGRAPHIC CONDITIONS ... one of 4 must be satisfied: \r\n       AND (  --    1a) Load source in truck source Range Circle AND LDest in truck's dest Range Circle    OR \r\n              --    1b) Load source in truck source Range Circle AND LDest in truck's corridor AND Load going in same general direction as truck          OR\r\n              --    2a) LSource in truck's Corridor AND LDest in Truck's dest Range Circle AND Load going in same general direction as truck      OR\r\n              --    2b) LSource in truck's Corridor AND LDest in truck's corridor AND Load going in general direction as truck\r\n              \r\n              (   -- 1a condition: Load source in truck source Range Circle AND LDest in truck's dest Range Circle\r\n                  -- 1a i Condition Load source in truck source Range Circle\r\n                  (  (@SrceLong <> 0.0 AND @SrceLong = l.SrceLong AND @SrceLat = l.SrceLat)\r\n                     OR\r\n                     (@SrceLong <> 0.0 AND  @SrceRadius >= dbo.udf_GetDistance( @SrceLat, @SrceLong, l.SrceLat, l.SrceLong)\r\n                      )\r\n                  ) -- END of 1a i condition\r\n                  AND -- 1a ii condition: LDest in truck's dest Range Circle\r\n                  (  (@DestLong <> 0.0 AND @DestLong = l.DestLong AND @DestLat=l.DestLat) \r\n                     OR\r\n                     (@DestLong <> 0.0 AND @DestRadius >= dbo.udf_GetDistance( @DestLat, @DestLong, l.DestLat, l.DestLong)\r\n                     )\r\n                  ) -- END of 1a ii condition.\r\n                 \r\n              ) -- END of 1a condition: Range Circles Only\r\n              \r\n              OR\r\n              ( -- All Corridor Conditions (1b, 2a, 2b)\r\n                -- Common requirement to all corridor conditions (1b, 2a, 2c):\r\n                -- Are the Truck and Load going in the same general direction\r\n                  \r\n                 ( (@uABx*(l.DestLong-l.SrceLong) + @uABy*(l.DestLat-l.SrceLat)) > 0 )\r\n                 AND\r\n                 ( -- all other conditions (1b, 2a, 2b)\r\n                    (-- 1b conditions:  Load source is in truck source Range Circle AND LDest is in truck's corridor \r\n                        -- 1b i.  Load Source Point in Truck Source Range Circle \r\n                        ( (@SrceLong <> 0.0 AND @SrceLong = l.SrceLong AND @SrceLat = l.SrceLat)\r\n                          OR\r\n                          (@SrceLong <> 0.0 AND  @SrceRadius >= dbo.udf_GetDistance( @SrceLat, @SrceLong, l.SrceLat, l.SrceLong)\r\n                          ) \r\n                    ) -- END of 1b i. condition\r\n                    AND\r\n                    ( -- 1b ii: LDest in truck's corridor  \r\n                      --  (The test point is the load point)\r\n                      --  Is the load DESTINATION point in the corridor?\r\n                      ( ( (@Nx - @Mx)*(l.DestLat - @My) - (l.DestLong - @Mx)*(@Ny - @My)  ) >= 0.00)  -- load source is left of MN\r\n                      AND\r\n                      ( ( (@Ox - @Nx)*(l.DestLat - @Ny) - (l.DestLong - @Nx)*(@Oy - @Ny)  ) >= 0.00)  -- load source is left of NO\r\n                      AND\r\n                      ( ( (@Px - @Ox)*(l.DestLat - @Oy) - (l.DestLong - @Ox)*(@Py - @Oy)  ) >= 0.00)  -- load source is left of OP\r\n                      AND\r\n                      ( ( (@Mx - @Px)*(l.DestLat - @Py) - (l.DestLong - @Px)*(@My - @Py)  ) >= 0.00)  -- load source is left of PM\r\n                    ) --...END of 1b ii. condition\r\n                    \r\n                 ) -- ......  END of 1b condition\r\n                 OR\r\n                 (  -- 2a and 2b Conditions\r\n                    -- 2a+b i. LSource in truck's Corridor \r\n                    (   ( ( (@Nx - @Mx)*(l.SrceLat - @My) - (l.SrceLong - @Mx)*(@Ny - @My)  ) >= 0.00)  -- load source is left of MN\r\n                        AND\r\n                        ( ( (@Ox - @Nx)*(l.SrceLat - @Ny) - (l.SrceLong - @Nx)*(@Oy - @Ny)  ) >= 0.00)  -- load source is left of NO\r\n                        AND\r\n                        ( ( (@Px - @Ox)*(l.SrceLat - @Oy) - (l.SrceLong - @Ox)*(@Py - @Oy)  ) >= 0.00)  -- load source is left of OP\r\n                        AND\r\n                        ( ( (@Mx - @Px)*(l.SrceLat - @Py) - (l.SrceLong - @Px)*(@My - @Py)  ) >= 0.00)  -- load source is left of PM\r\n                     \r\n                    ) -- END of 2a/b i condition.\r\n                    AND\r\n                    ( -- 2a ii OR 2b ii Conditions...................\r\n                        ( -- 2a ii. LDest in Truck's Dest Range Circle\r\n                           (@DestLong <> 0.0 AND @DestLong = l.DestLong AND @DestLat=l.DestLat)\r\n                           OR\r\n                           (@DestLong <> 0.0 AND @DestRadius >= dbo.udf_GetDistance( @DestLat, @DestLong, l.DestLat, l.DestLong)\r\n                           )\r\n                        ) -- END of 2a ii condition.\r\n                        OR\r\n                        ( -- 2b ii   LDest in Truck's Corridor.  \r\n                           ( ( (@Nx - @Mx)*(l.DestLat - @My) - (l.DestLong - @Mx)*(@Ny - @My)  ) >= 0.00)  -- load source is left of MN\r\n                           AND\r\n                           ( ( (@Ox - @Nx)*(l.DestLat - @Ny) - (l.DestLong - @Nx)*(@Oy - @Ny)  ) >= 0.00)  -- load source is left of NO\r\n                           AND\r\n                           ( ( (@Px - @Ox)*(l.DestLat - @Oy) - (l.DestLong - @Ox)*(@Py - @Oy)  ) >= 0.00)  -- load source is left of OP\r\n                           AND\r\n                           ( ( (@Mx - @Px)*(l.DestLat - @Py) - (l.DestLong - @Px)*(@My - @Py)  ) >= 0.00)  -- load source is left of PM\r\n                        ) -- END of 2b ii condition\r\n                                           ) -- END of 2a ii OR 2b ii conditions\r\n                     \r\n                 ) -- END of condition 2a and 2b\r\n                 \r\n              )  -- END of 'All other corridor conditions\r\n                        \r\n           ) -- END of all corridor conditions.\r\n               \r\n        ) -- END of GEOGRAPHIC conditions\r\n        \r\n   END -- .... END of Range Circle Plus Corridor Query\r\n \r\n\r\n\r\n-----------------------------------------------------------------------------------------------\r\n-- start Range Circle (only) Query \r\n-- If Corridor Matching is NOT chosen, just do RANGE circle tests\r\n-- for all loads within the truck's specified source and destination range circles \r\n-----------------------------------------------------------------------------------------------\r\nELSE     \r\n   BEGIN\r\n      --  This is with geographic condition \"1a\" only.\r\n      -- Insert equipment matches into the LinkEquipMatch table if they match.\r\n    INSERT INTO dbo.DATEquipmentLead\r\n\t (\r\n\t [CustCd] \r\n\t,[EToken] \r\n\t,[LToken]\r\n\t,[CreatedOn]\r\n\t,[CreatedBy]\r\n\t,[LeadType]\r\n\t)\r\n    SELECT @CustCd\r\n          ,@EquipToken\r\n          ,l.Token\r\n          ,@GetDate\r\n          ,@UserID\r\n          ,@PrimaryMatch\r\n      FROM dbo.DATLoadPosting l \r\n\r\n      -----------------------------------------------------------\r\n      -- Common lead filtering\r\n      -----------------------------------------------------------\r\n       WHERE  (l.EndDate > @GetDate)\r\n        -- Available date matches\r\n        AND ( \r\n               (l.DateAvail >= @Today) AND ( l.DateAvail >= @DateAvail )\r\n                    OR\r\n               (l.DateAvail < @Today) AND (@DateAvail = @Today)\t-- To handle Pre dated posting\r\n            )\r\n        -- Vehicle size matches (Mask out only the first two bits - no corridor bit)\r\n        AND ((@VSize & l.VSize & @AllVSize) > 0) \r\n    \r\n        -- Vechicle Type match\r\n        AND ((@VType & l.VType) > 0) \r\n\r\n        -- Country Border restriction conditions for equipment\r\n        AND (    \r\n                   l.SrceCountry = @SrceCountry   AND\r\n                   l.DestCountry = @DestCountry \r\n            ) -- .... END of country border closing tests\r\n       \r\n       -- Used the Removed column instead of Removed table.\r\n       AND (l.DeletedOn IS NULL)\r\n\r\n       --Check if Equipment Posting is Private Network \r\n       AND (@PostMode = 'A' OR (EXISTS(SELECT 'X' FROM dbo.NetworkMembers \r\n                                                WHERE NetworkId = @NetworkId \r\n                                                AND MemberCustCD = l.CustCd)))\r\n\r\n       -- Source Point Conditions\r\n       AND (  (@SrceLong <> 0.0 AND @SrceLong = l.SrceLong AND @SrceLat = l.SrceLat) \r\n              OR\r\n              (@SrceLong <> 0.0 AND  @SrceRadius >= dbo.udf_GetDistance( @SrceLat, @SrceLong, l.SrceLat, l.SrceLong)\r\n              )       \r\n           )\r\n\r\n       --Destination Point conditions\r\n       AND (  (@DestLong <> 0.0 AND @DestLong = l.DestLong AND @DestLat=l.DestLat) \r\n              OR\r\n              (@DestLong <> 0.0 AND @DestRadius >= dbo.udf_GetDistance( @DestLat, @DestLong, l.DestLat, l.DestLong)\r\n              )\r\n            )\r\n    \r\n   END\r\nEND","parameters":[{"name":"EquipToken","description":null,"mode":"IN","data_type":"int","custom_fields":{}},{"name":"CustCd","description":null,"mode":"IN","data_type":"varchar(10)","custom_fields":{}},{"name":"UserID","description":null,"mode":"IN","data_type":"int","custom_fields":{}},{"name":"SrceID","description":null,"mode":"IN","data_type":"int","custom_fields":{}},{"name":"SrceSt","description":null,"mode":"IN","data_type":"char(2)","custom_fields":{}},{"name":"SrceLong","description":null,"mode":"IN","data_type":"float","custom_fields":{}},{"name":"SrceLat","description":null,"mode":"IN","data_type":"float","custom_fields":{}},{"name":"SrceCountry","description":null,"mode":"IN","data_type":"int","custom_fields":{}},{"name":"SrceRadius","description":null,"mode":"IN","data_type":"int","custom_fields":{}},{"name":"DestID","description":null,"mode":"IN","data_type":"int","custom_fields":{}},{"name":"DestSt","description":null,"mode":"IN","data_type":"char(2)","custom_fields":{}},{"name":"DestLong","description":null,"mode":"IN","data_type":"float","custom_fields":{}},{"name":"DestLat","description":null,"mode":"IN","data_type":"float","custom_fields":{}},{"name":"DestCountry","description":null,"mode":"IN","data_type":"int","custom_fields":{}},{"name":"DestRadius","description":null,"mode":"IN","data_type":"int","custom_fields":{}},{"name":"DateAvail","description":null,"mode":"IN","data_type":"datetime","custom_fields":{}},{"name":"VSize","description":null,"mode":"IN","data_type":"int","custom_fields":{}},{"name":"VType","description":null,"mode":"IN","data_type":"int","custom_fields":{}},{"name":"PAttrib","description":null,"mode":"IN","data_type":"int","custom_fields":{}},{"name":"PostMode","description":null,"mode":"IN","data_type":"char(1)","custom_fields":{}},{"name":"GlobalExclude","description":null,"mode":"IN","data_type":"bit","custom_fields":{}},{"name":"NetworkId","description":null,"mode":"IN","data_type":"int","custom_fields":{}},{"name":"Corridor","description":null,"mode":"IN","data_type":"char(1)","custom_fields":{}}],"dependencies":null,"imported_at":"2021-07-29 12:59"};