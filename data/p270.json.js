window.repositoryObject = {"parameters_custom_fields":[],"object_id":"p270","name":"usp_GetLegacyDeletedLeads","subtype":"PROCEDURE","is_user_defined":false,"description":null,"summary":[{"field":"Documentation","value":{"_type":"link","name":"LoadMatching@UDVLPLL4DATASRV.linklogi.com","id":"d9"}},{"field":"Schema","value":"dbo"},{"field":"Name","value":"usp_GetLegacyDeletedLeads"},{"field":"Type","value":"Procedure"}],"script":"CREATE   PROCEDURE [dbo].[usp_GetLegacyDeletedLeads] \r\nAS\r\n\r\n--------------------------------------------------------------------------\r\n--PROCEDURE NAME : usp_GetLegacyDeletedLeads\r\n--------------------------------------------------------------------------\r\n--DESCRIPTION :   This will return a list of CustCDs with deleted legacy and/or DAT leads since the last call\r\n--\r\n--                Ex. If the Customer TCORELL had deleted legacy Equipment leads & deleted DAT Load lead, the record will look like this.\r\n--                  CustCD      DeletedLegacyEquipmentLead\t\tDeletedLegacyLoadLead\tDeletedDATEquipmentLead\t\tDeletedDATLoadLead\r\n--                  TCORELL\t\t1\t\t\t\t\t\t\t\t0\t\t\t\t\t\t0\t\t\t\t\t\t\t1\r\n--\r\n--CALLED BY :     Notification Process (Heartbeat Service)\r\n--\r\n--------------------------------------------------------------------------\r\n--REMARKS:\r\n--------------------------------------------------------------------------\r\n--HISTORY: \r\n--AUTHOR\t\tDATE\t\tDESCRIPTION\r\n--Vevian\t\t2021.04.20\tLL4RW-273: Initial Release\r\n--Vevian\t\t2021.04.30\tLL4RW-305: added logic for DAT deleted leads\r\n--------------------------------------------------------------------------\r\n\r\nDECLARE @LastCheckTime datetime\r\n      , @CurrentTime   datetime\r\n      , @AppID         varchar(50) = 'LoadMatching'\r\n\r\nSET @CurrentTime = GETUTCDATE()\r\n\r\nSELECT\t@LastCheckTime\t= LastCheck \r\nFROM\tdbo.LegacyDeletedLastCheck \r\nWHERE\tAppID = @AppID\r\n\r\nIF (@@ROWCOUNT = 0)\r\n\tBEGIN\r\n\t\tINSERT INTO dbo.LegacyDeletedLastCheck (AppID) VALUES (@AppID)\r\n\t\tSET @LastCheckTime = '01/01/1900'\r\n\tEND\r\n\r\n/*\r\n\tInline tables to avoid complicated subqueries which would slow the logic down\r\n*/\r\n-- Extended EquipmentLead\r\nDECLARE @EquipLead AS TABLE (CustCD NVARCHAR(10))\r\nINSERT INTO @EquipLead\r\nSELECT\te.CustCD FROM dbo.EquipmentLead e INNER JOIN dbo.LoadPosting l on (e.LToken = l.Token)     \r\nWHERE\tl.OriginalToken > 0 AND l.DeletedOn > @LastCheckTime\t\t\r\nGROUP BY e.CustCD\r\n\r\n-- Extended LoadLead\r\nDECLARE @LoadLead AS TABLE (CustCD NVARCHAR(10))\r\nINSERT INTO @LoadLead\r\nSELECT\tl.CustCD FROM dbo.LoadLead l INNER JOIN dbo.EquipmentPosting e on (e.Token = l.EToken)           \r\nWHERE\te.OriginalToken > 0 AND e.DeletedOn > @LastCheckTime\r\nGROUP BY l.CustCD\r\n\r\n-- Extended DATEquipmentLead\r\nDECLARE @DATEquipLead AS TABLE (CustCD NVARCHAR(10))\r\nINSERT INTO @EquipLead\r\nSELECT\te.CustCD FROM dbo.DATEquipmentLead e INNER JOIN dbo.DATLoadPosting l on (e.LToken = l.Token)     \r\nWHERE\tl.DeletedOn > @LastCheckTime\t\t\r\nGROUP BY e.CustCD\r\n\r\n-- Extended DATLoadLead\r\nDECLARE @DATLoadLead AS TABLE (CustCD NVARCHAR(10))\r\nINSERT INTO @LoadLead\r\nSELECT\tl.CustCD FROM dbo.DATLoadLead l INNER JOIN dbo.DATEquipmentPosting e on (e.Token = l.EToken)           \r\nWHERE\te.DeletedOn > @LastCheckTime\r\nGROUP BY l.CustCD\r\n\r\n\r\n/*\r\n\tCheck for new deleted legacy and/or DAT leads\r\n*/\r\nSELECT\tDISTINCT A.CustCD\r\n\t\t, IIF(EL.CustCD IS NULL, 0, 1) DeletedLegacyEquipmentLead\r\n\t\t, IIF(LL.CustCD IS NULL, 0, 1) DeletedLegacyLoadLead\r\n\t\t, IIF(DEL.CustCD IS NULL, 0, 1) DeletedDATEquipmentLead\r\n\t\t, IIF(DLL.CustCD IS NULL, 0, 1) DeletedDATLoadLead\r\nFROM\tMain.dbo.Account A\r\n\t\tLEFT JOIN @EquipLead EL ON A.CustCD = EL.CustCD\r\n\t\tLEFT JOIN @LoadLead LL ON A.CustCD = LL.CustCD\r\n\t\tLEFT JOIN @DATEquipLead DEL ON A.CustCD = DEL.CustCD\r\n\t\tLEFT JOIN @DATLoadLead DLL ON A.CustCD = DLL.CustCD\r\nWHERE\tEL.CustCD IS NOT NULL \r\n\t\tOR LL.CustCD IS NOT NULL\r\n\t\tOR DEL.CustCD IS NOT NULL\r\n\t\tOR DLL.CustCD IS NOT NULL\r\n\r\n/*\r\n\tRecord last-checked time for next run\r\n*/\r\nIF @@ERROR = 0 \r\n\tBEGIN\r\n\t\tUPDATE dbo.LegacyDeletedLastCheck  \r\n\t\tSET LastCheck = @CurrentTime\r\n\t\tWHERE AppID = @AppID\r\n\tEND","parameters":[],"dependencies":null,"imported_at":"2021-07-29 12:59"};